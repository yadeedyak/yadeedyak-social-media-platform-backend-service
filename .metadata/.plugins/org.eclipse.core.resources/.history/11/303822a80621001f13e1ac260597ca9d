package com.Yadeedya.Yadeedya_social_media.controller;

import java.util.List;
import java.util.Optional;

import javax.swing.text.PlainDocument;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.service.annotation.PutExchange;

import com.Yadeedya.Yadeedya_social_media.models.User;
import com.Yadeedya.Yadeedya_social_media.repository.UserRepository;
import com.Yadeedya.Yadeedya_social_media.service.UserService;

@RestController
public class UserController {

	@Autowired
	private UserRepository userRepository;
	@Autowired
	private UserService userService;
	
	
	@GetMapping("/api/users")
	public List<User>getUsers() {
		
		List<User> users=userRepository.findAll();
		
		return users;
		
		
	}
	
	@GetMapping("/api/users/{userid}")
	public User getUserByid(@PathVariable ("userid") Integer id) throws Exception {
		
		User user =userService.findUserById(id);
		
		return user;
		
	}
	
	@PutMapping("/api/users/{userid}")
	public User updateUser(@RequestBody User user,@PathVariable Integer userid) throws Exception {
		User updatedUser =userService.updateUser(user, userid);
		return updatedUser;
		
	}
	
	@PutMapping("/api/users/{userid1}/{userid2}")
	public User followUserHandler(@PathVariable Integer userid,@PathVariable Integer userid2) throws Exception {
		
		User user=userService.followUser(userid, userid2);
		
		return user;
	}
	
	@GetMapping("/api/users/search")
	public List<User> searchUser(@RequestParam("query") String query) {
		
		List<User> users=userService.searchUser(query);
		return users;
	}
}
